Description: Generative AI Use Cases JP (uksb-1tupboc48)
Resources:
  AuthUserPool8115E87F:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly:
          Fn::If:
            - SelfSignUpEnabled
            - "false"
            - "true"
      AutoVerifiedAttributes:
        - email
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthUserPoolclientA74673A9:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      IdTokenValidity: 1440
      SupportedIdentityProviders:
        - COGNITO
      TokenValidityUnits:
        IdToken: minutes
      UserPoolId:
        Ref: AuthUserPool8115E87F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthIdentityPool659E7F64:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId:
            Ref: AuthUserPoolclientA74673A9
          ProviderName:
            Fn::Join:
              - ""
              - - cognito-idp.ap-northeast-1.
                - Ref: AWS::URLSuffix
                - /
                - Ref: AuthUserPool8115E87F
          ServerSideTokenCheck: true
    DependsOn:
      - AuthUserPoolclientA74673A9
      - AuthUserPool8115E87F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthIdentityPoolAuthenticatedRole09311B20:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: AuthIdentityPool659E7F64
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
      Description:
        Fn::Join:
          - ""
          - - 'Default Authenticated Role for Identity Pool '
            - Fn::GetAtt:
                - AuthIdentityPool659E7F64
                - Name
    DependsOn:
      - AuthUserPoolclientA74673A9
      - AuthUserPool8115E87F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthIdentityPoolAuthenticatedRoleDefaultPolicy2F0603CE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - APIPredictStream44DDBC25
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - APIPredictStream44DDBC25
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: AuthIdentityPoolAuthenticatedRoleDefaultPolicy2F0603CE
      Roles:
        - Ref: AuthIdentityPoolAuthenticatedRole09311B20
    DependsOn:
      - AuthUserPoolclientA74673A9
      - AuthUserPool8115E87F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthIdentityPoolUnauthenticatedRoleA421F307:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud:
                  Ref: AuthIdentityPool659E7F64
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
            Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
        Version: "2012-10-17"
      Description:
        Fn::Join:
          - ""
          - - 'Default Unauthenticated Role for Identity Pool '
            - Fn::GetAtt:
                - AuthIdentityPool659E7F64
                - Name
    DependsOn:
      - AuthUserPoolclientA74673A9
      - AuthUserPool8115E87F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthIdentityPoolDefaultRoleAttachmentA62DEBB8:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: AuthIdentityPool659E7F64
      Roles:
        authenticated:
          Fn::GetAtt:
            - AuthIdentityPoolAuthenticatedRole09311B20
            - Arn
        unauthenticated:
          Fn::GetAtt:
            - AuthIdentityPoolUnauthenticatedRoleA421F307
            - Arn
    DependsOn:
      - AuthUserPoolclientA74673A9
      - AuthUserPool8115E87F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthSourceIpPolicy7AD220E7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: '*'
            Condition:
              NotIpAddress:
                aws:SourceIp:
                  Fn::If:
                    - AllowedIpAddressEmpty
                    - []
                    - Fn::If:
                        - AllowedIpAddressBothDefined
                        - Fn::Split:
                            - ','
                            - Fn::Join:
                                - ','
                                - - Ref: AllowedIpV4AddressRanges
                                  - Ref: AllowedIpV6AddressRanges
                        - Fn::If:
                            - AllowedIpV4AddressRanges
                            - Fn::Split:
                                - ','
                                - Ref: AllowedIpV4AddressRanges
                            - Fn::Split:
                                - ','
                                - Ref: AllowedIpV6AddressRanges
            Effect: Deny
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: AuthSourceIpPolicy7AD220E7
      Roles:
        - Ref: AuthIdentityPoolAuthenticatedRole09311B20
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  AuthPollyPolicy8CB5A12A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: polly:SynthesizeSpeech
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: AuthPollyPolicy8CB5A12A
      Roles:
        - Ref: AuthIdentityPoolAuthenticatedRole09311B20
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  DatabaseTableF104A135:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: createdDate
          AttributeType: S
        - AttributeName: feedback
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: FeedbackIndex
          KeySchema:
            - AttributeName: feedback
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: createdDate
          KeyType: RANGE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIFileBucket8FB29855:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - POST
              - PUT
            AllowedOrigins:
              - '*'
            ExposedHeaders: []
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIFileBucketPolicyDD3E15C2:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: APIFileBucket8FB29855
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - APIFileBucket8FB29855
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - APIFileBucket8FB29855
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - APIFileBucket8FB29855
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - APIFileBucket8FB29855
                        - Arn
                    - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIFileBucketAutoDeleteObjectsCustomResourceDAA1C1BF:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: APIFileBucket8FB29855
    DependsOn:
      - APIFileBucketPolicyDD3E15C2
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIPredictServiceRole6B8A4E2C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIPredictServiceRoleDefaultPolicy0D908F6B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - bedrock:*
              - logs:*
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: APIPredictServiceRoleDefaultPolicy0D908F6B
      Roles:
        - Ref: APIPredictServiceRole6B8A4E2C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIPredict09E4E4FF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/51382d4f95f45c99831b34d4210ab875156bdc586defd80ab61dd78abb45db73.zip
      Environment:
        Variables:
          MODEL_REGION:
            Ref: ModelRegion
          MODEL_IDS:
            Fn::Sub:
              - '["${ModelIds}"]'
              - ModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ModelIds
          IMAGE_GENERATION_MODEL_IDS:
            Fn::Sub:
              - '["${ImageGenerationModelIds}"]'
              - ImageGenerationModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ImageGenerationModelIds
          CROSS_ACCOUNT_BEDROCK_ROLE_ARN: ""
          GUARDRAIL_VERSION: DRAFT
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIPredictServiceRole6B8A4E2C
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIPredictServiceRoleDefaultPolicy0D908F6B
      - APIPredictServiceRole6B8A4E2C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.51382d4f95f45c99831b34d4210ab875156bdc586defd80ab61dd78abb45db73
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIPredictStreamServiceRole2B2C7355:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIPredictStreamServiceRoleDefaultPolicy07B1CCF0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - APIFileBucket8FB29855
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - APIFileBucket8FB29855
                        - Arn
                    - /*
          - Action:
              - bedrock:*
              - logs:*
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: APIPredictStreamServiceRoleDefaultPolicy07B1CCF0
      Roles:
        - Ref: APIPredictStreamServiceRole2B2C7355
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIPredictStream44DDBC25:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/5dcdca667166ee13b4f14403fb429474f9db56c05eae6e07168c2212b4b07ed3.zip
      Environment:
        Variables:
          MODEL_REGION:
            Ref: ModelRegion
          MODEL_IDS:
            Fn::Sub:
              - '["${ModelIds}"]'
              - ModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ModelIds
          IMAGE_GENERATION_MODEL_IDS:
            Fn::Sub:
              - '["${ImageGenerationModelIds}"]'
              - ImageGenerationModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ImageGenerationModelIds
          AGENT_REGION: us-east-1
          AGENT_MAP: '{}'
          CROSS_ACCOUNT_BEDROCK_ROLE_ARN: ""
          BUCKET_NAME:
            Ref: APIFileBucket8FB29855
          GUARDRAIL_VERSION: DRAFT
      Handler: index.handler
      MemorySize: 256
      Role:
        Fn::GetAtt:
          - APIPredictStreamServiceRole2B2C7355
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIPredictStreamServiceRoleDefaultPolicy07B1CCF0
      - APIPredictStreamServiceRole2B2C7355
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.5dcdca667166ee13b4f14403fb429474f9db56c05eae6e07168c2212b4b07ed3
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIPredictTitleServiceRoleAC90BDCD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIPredictTitleServiceRoleDefaultPolicy2FBAD754:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
          - Action:
              - bedrock:*
              - logs:*
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: APIPredictTitleServiceRoleDefaultPolicy2FBAD754
      Roles:
        - Ref: APIPredictTitleServiceRoleAC90BDCD
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIPredictTitle95F64FA4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/1232fc3c99a21e182069e3273da744c430352fd39efc3d178c653b2122563c21.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
          MODEL_REGION:
            Ref: ModelRegion
          MODEL_IDS:
            Fn::Sub:
              - '["${ModelIds}"]'
              - ModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ModelIds
          IMAGE_GENERATION_MODEL_IDS:
            Fn::Sub:
              - '["${ImageGenerationModelIds}"]'
              - ImageGenerationModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ImageGenerationModelIds
          CROSS_ACCOUNT_BEDROCK_ROLE_ARN: ""
          GUARDRAIL_VERSION: DRAFT
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIPredictTitleServiceRoleAC90BDCD
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIPredictTitleServiceRoleDefaultPolicy2FBAD754
      - APIPredictTitleServiceRoleAC90BDCD
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.1232fc3c99a21e182069e3273da744c430352fd39efc3d178c653b2122563c21
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIGenerateImageServiceRoleC0428356:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGenerateImageServiceRoleDefaultPolicy62C0EC56:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - bedrock:*
              - logs:*
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: APIGenerateImageServiceRoleDefaultPolicy62C0EC56
      Roles:
        - Ref: APIGenerateImageServiceRoleC0428356
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGenerateImage777647C7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/f941e4a414cb0a19c62c091375d47614b16cbc3eb3da44204353071db9247b07.zip
      Environment:
        Variables:
          MODEL_REGION:
            Ref: ModelRegion
          MODEL_IDS:
            Fn::Sub:
              - '["${ModelIds}"]'
              - ModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ModelIds
          IMAGE_GENERATION_MODEL_IDS:
            Fn::Sub:
              - '["${ImageGenerationModelIds}"]'
              - ImageGenerationModelIds:
                  Fn::Join:
                    - '","'
                    - Ref: ImageGenerationModelIds
          CROSS_ACCOUNT_BEDROCK_ROLE_ARN: ""
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIGenerateImageServiceRoleC0428356
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIGenerateImageServiceRoleDefaultPolicy62C0EC56
      - APIGenerateImageServiceRoleC0428356
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.f941e4a414cb0a19c62c091375d47614b16cbc3eb3da44204353071db9247b07
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APICreateChatServiceRoleC49F5DA3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateChatServiceRoleDefaultPolicy0072EEC4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APICreateChatServiceRoleDefaultPolicy0072EEC4
      Roles:
        - Ref: APICreateChatServiceRoleC49F5DA3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateChatE07AFAF4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/c4e798b89ca58fd8bf121ff03b33e94f2bdcb43b1661aa20f82c38163949d33e.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APICreateChatServiceRoleC49F5DA3
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APICreateChatServiceRoleDefaultPolicy0072EEC4
      - APICreateChatServiceRoleC49F5DA3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.c4e798b89ca58fd8bf121ff03b33e94f2bdcb43b1661aa20f82c38163949d33e
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIDeleteChatServiceRole6340C3C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteChatServiceRoleDefaultPolicy010EC0CA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIDeleteChatServiceRoleDefaultPolicy010EC0CA
      Roles:
        - Ref: APIDeleteChatServiceRole6340C3C0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteChat1517278C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/5197d0ba9da414b5e26573dddfaa4146fe318bb9e63bc4737ac2817a738aa191.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIDeleteChatServiceRole6340C3C0
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIDeleteChatServiceRoleDefaultPolicy010EC0CA
      - APIDeleteChatServiceRole6340C3C0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.5197d0ba9da414b5e26573dddfaa4146fe318bb9e63bc4737ac2817a738aa191
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APICreateMessagesServiceRole3B693939:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateMessagesServiceRoleDefaultPolicy6B2A82CC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APICreateMessagesServiceRoleDefaultPolicy6B2A82CC
      Roles:
        - Ref: APICreateMessagesServiceRole3B693939
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateMessages1C3421C0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/3e8d4b465c65b73af5a11fc6e6264b9a2b9dd2e2e24ffe0c6458ed73b860294c.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APICreateMessagesServiceRole3B693939
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APICreateMessagesServiceRoleDefaultPolicy6B2A82CC
      - APICreateMessagesServiceRole3B693939
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.3e8d4b465c65b73af5a11fc6e6264b9a2b9dd2e2e24ffe0c6458ed73b860294c
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIUpdateChatTitleServiceRoleDF447D6E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIUpdateChatTitleServiceRoleDefaultPolicyCE257C4E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIUpdateChatTitleServiceRoleDefaultPolicyCE257C4E
      Roles:
        - Ref: APIUpdateChatTitleServiceRoleDF447D6E
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIUpdateChatTitleF8FCA547:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/ee827e66ae37bdd7f4f4493f03766973a6b8837d2fbc2a76374ebc06653c843d.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIUpdateChatTitleServiceRoleDF447D6E
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIUpdateChatTitleServiceRoleDefaultPolicyCE257C4E
      - APIUpdateChatTitleServiceRoleDF447D6E
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.ee827e66ae37bdd7f4f4493f03766973a6b8837d2fbc2a76374ebc06653c843d
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIListChatsServiceRole336654B4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIListChatsServiceRoleDefaultPolicyD6E68E36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIListChatsServiceRoleDefaultPolicyD6E68E36
      Roles:
        - Ref: APIListChatsServiceRole336654B4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIListChats12807275:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/4132fb2dc084257a148ef9d323c162633d4e80fc25bdf1489f68f33e6206a29e.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIListChatsServiceRole336654B4
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIListChatsServiceRoleDefaultPolicyD6E68E36
      - APIListChatsServiceRole336654B4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.4132fb2dc084257a148ef9d323c162633d4e80fc25bdf1489f68f33e6206a29e
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIFindChatbyIdServiceRole35A1548F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIFindChatbyIdServiceRoleDefaultPolicyDDD2446A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIFindChatbyIdServiceRoleDefaultPolicyDDD2446A
      Roles:
        - Ref: APIFindChatbyIdServiceRole35A1548F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIFindChatbyId74476825:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/0dba34dde1f3746e8e83f8d5c66bd387925ee81e306436e582cc79a1cbfbc691.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIFindChatbyIdServiceRole35A1548F
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIFindChatbyIdServiceRoleDefaultPolicyDDD2446A
      - APIFindChatbyIdServiceRole35A1548F
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.0dba34dde1f3746e8e83f8d5c66bd387925ee81e306436e582cc79a1cbfbc691
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIListMessagesServiceRole4C0AC764:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIListMessagesServiceRoleDefaultPolicy8E659637:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIListMessagesServiceRoleDefaultPolicy8E659637
      Roles:
        - Ref: APIListMessagesServiceRole4C0AC764
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIListMessages536ED2CC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/0b22430eec3c36fd37c9a1a7568e1b9c71e130e5b91be574a702291a78bec23c.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIListMessagesServiceRole4C0AC764
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIListMessagesServiceRoleDefaultPolicy8E659637
      - APIListMessagesServiceRole4C0AC764
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.0b22430eec3c36fd37c9a1a7568e1b9c71e130e5b91be574a702291a78bec23c
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIUpdateFeedbackServiceRole1A31F75D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIUpdateFeedbackServiceRoleDefaultPolicyB3422366:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIUpdateFeedbackServiceRoleDefaultPolicyB3422366
      Roles:
        - Ref: APIUpdateFeedbackServiceRole1A31F75D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIUpdateFeedback2F9276A1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/292e5f5442e2d0baad358f98c82b608055cb78326348bcfde1b66265d5ee0850.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIUpdateFeedbackServiceRole1A31F75D
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIUpdateFeedbackServiceRoleDefaultPolicyB3422366
      - APIUpdateFeedbackServiceRole1A31F75D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.292e5f5442e2d0baad358f98c82b608055cb78326348bcfde1b66265d5ee0850
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIGetWebTextServiceRole2A2618E2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGetWebText363F573D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/e9c89e2f8c8bb386619b4b2eac325925fa24af2b8093f27e2bc694caeae0a00d.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIGetWebTextServiceRole2A2618E2
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIGetWebTextServiceRole2A2618E2
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.e9c89e2f8c8bb386619b4b2eac325925fa24af2b8093f27e2bc694caeae0a00d
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APICreateShareIdServiceRoleB27F0BB3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateShareIdServiceRoleDefaultPolicy2ECB25CC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APICreateShareIdServiceRoleDefaultPolicy2ECB25CC
      Roles:
        - Ref: APICreateShareIdServiceRoleB27F0BB3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateShareId3D7F7B2B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/006a31e3b5e296e79163150695b1c7c246c55ac6584beea0c1350fe3c40dbfc4.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APICreateShareIdServiceRoleB27F0BB3
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APICreateShareIdServiceRoleDefaultPolicy2ECB25CC
      - APICreateShareIdServiceRoleB27F0BB3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.006a31e3b5e296e79163150695b1c7c246c55ac6584beea0c1350fe3c40dbfc4
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIGetSharedChatServiceRole20022F3B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGetSharedChatServiceRoleDefaultPolicy99124ED8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIGetSharedChatServiceRoleDefaultPolicy99124ED8
      Roles:
        - Ref: APIGetSharedChatServiceRole20022F3B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGetSharedChatF02561ED:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/bdb889869e728020c0dce34d27122c67653dc6780609769ef6a4fa186e4e39a5.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIGetSharedChatServiceRole20022F3B
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIGetSharedChatServiceRoleDefaultPolicy99124ED8
      - APIGetSharedChatServiceRole20022F3B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.bdb889869e728020c0dce34d27122c67653dc6780609769ef6a4fa186e4e39a5
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIFindShareIdServiceRole2DC02BD9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIFindShareIdServiceRoleDefaultPolicy60AF3775:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIFindShareIdServiceRoleDefaultPolicy60AF3775
      Roles:
        - Ref: APIFindShareIdServiceRole2DC02BD9
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIFindShareId3F1AA77B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/045f296e22732fe3195b977a4037dbb78fbcd57797815a39cb3b805808d186df.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIFindShareIdServiceRole2DC02BD9
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIFindShareIdServiceRoleDefaultPolicy60AF3775
      - APIFindShareIdServiceRole2DC02BD9
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.045f296e22732fe3195b977a4037dbb78fbcd57797815a39cb3b805808d186df
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIDeleteShareIdServiceRole02E8B695:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteShareIdServiceRoleDefaultPolicy7764E7A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIDeleteShareIdServiceRoleDefaultPolicy7764E7A7
      Roles:
        - Ref: APIDeleteShareIdServiceRole02E8B695
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteShareIdFE187370:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/8b18c3eba5f6d45c87f7c02e4d276557b9e555d42b2a0596d77074b49a824025.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIDeleteShareIdServiceRole02E8B695
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIDeleteShareIdServiceRoleDefaultPolicy7764E7A7
      - APIDeleteShareIdServiceRole02E8B695
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.8b18c3eba5f6d45c87f7c02e4d276557b9e555d42b2a0596d77074b49a824025
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIListSystemContextsServiceRole60484AB7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIListSystemContextsServiceRoleDefaultPolicy40C08CBE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIListSystemContextsServiceRoleDefaultPolicy40C08CBE
      Roles:
        - Ref: APIListSystemContextsServiceRole60484AB7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIListSystemContexts08AE4129:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/51b4c0f639ca6c41697cd08db0bdaa9bf4e08009e76a2698ac2fc0614be5faec.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIListSystemContextsServiceRole60484AB7
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIListSystemContextsServiceRoleDefaultPolicy40C08CBE
      - APIListSystemContextsServiceRole60484AB7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.51b4c0f639ca6c41697cd08db0bdaa9bf4e08009e76a2698ac2fc0614be5faec
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APICreateSystemContextsServiceRoleD588AFD4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateSystemContextsServiceRoleDefaultPolicy14B29479:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APICreateSystemContextsServiceRoleDefaultPolicy14B29479
      Roles:
        - Ref: APICreateSystemContextsServiceRoleD588AFD4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APICreateSystemContextsB5DC1BC2:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/ce17256a7ade8f883425544fec69b47939c86008169e586546c1c226b7b05322.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APICreateSystemContextsServiceRoleD588AFD4
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APICreateSystemContextsServiceRoleDefaultPolicy14B29479
      - APICreateSystemContextsServiceRoleD588AFD4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.ce17256a7ade8f883425544fec69b47939c86008169e586546c1c226b7b05322
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIUpdateSystemContextTitleServiceRoleAE4E6BD7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIUpdateSystemContextTitleServiceRoleDefaultPolicy5EA8F0B5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIUpdateSystemContextTitleServiceRoleDefaultPolicy5EA8F0B5
      Roles:
        - Ref: APIUpdateSystemContextTitleServiceRoleAE4E6BD7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIUpdateSystemContextTitle5806E033:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/429c2a7ceeb072fc3cefe33d09cc957869070007bb41488b3bb488daafe620d8.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIUpdateSystemContextTitleServiceRoleAE4E6BD7
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIUpdateSystemContextTitleServiceRoleDefaultPolicy5EA8F0B5
      - APIUpdateSystemContextTitleServiceRoleAE4E6BD7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.429c2a7ceeb072fc3cefe33d09cc957869070007bb41488b3bb488daafe620d8
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIDeleteSystemContextsServiceRole63CAEFD9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteSystemContextsServiceRoleDefaultPolicy7DF20D3B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DatabaseTableF104A135
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DatabaseTableF104A135
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: APIDeleteSystemContextsServiceRoleDefaultPolicy7DF20D3B
      Roles:
        - Ref: APIDeleteSystemContextsServiceRole63CAEFD9
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteSystemContexts7B545538:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/5e9eb1a72202d71e53da942008ed3a11bda2743b4e73ac2db05b11ef97e67c16.zip
      Environment:
        Variables:
          TABLE_NAME:
            Ref: DatabaseTableF104A135
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIDeleteSystemContextsServiceRole63CAEFD9
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIDeleteSystemContextsServiceRoleDefaultPolicy7DF20D3B
      - APIDeleteSystemContextsServiceRole63CAEFD9
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.5e9eb1a72202d71e53da942008ed3a11bda2743b4e73ac2db05b11ef97e67c16
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIGetSignedUrlServiceRole3309134D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGetSignedUrlServiceRoleDefaultPolicy7028155F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - APIFileBucket8FB29855
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - APIFileBucket8FB29855
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: APIGetSignedUrlServiceRoleDefaultPolicy7028155F
      Roles:
        - Ref: APIGetSignedUrlServiceRole3309134D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGetSignedUrl0A6EC682:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/067628f126cb2d7974f65cdc958e1ed1c00896ed15fb6f81032a47401653be03.zip
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: APIFileBucket8FB29855
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIGetSignedUrlServiceRole3309134D
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIGetSignedUrlServiceRoleDefaultPolicy7028155F
      - APIGetSignedUrlServiceRole3309134D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.067628f126cb2d7974f65cdc958e1ed1c00896ed15fb6f81032a47401653be03
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIGetFileDownloadSignedUrlFunctionServiceRole83916D13:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGetFileDownloadSignedUrlFunctionServiceRoleDefaultPolicy2880D406:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - APIFileBucket8FB29855
                  - Arn
              - Fn::Join:
                  - ""
                  - - 'arn:aws:s3:::'
                    - Ref: RagDataSourceBucket091872DB
                    - /*
              - Fn::Join:
                  - ""
                  - - 'arn:aws:s3:::'
                    - Ref: RagDataSourceBucket091872DB
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - APIFileBucket8FB29855
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: APIGetFileDownloadSignedUrlFunctionServiceRoleDefaultPolicy2880D406
      Roles:
        - Ref: APIGetFileDownloadSignedUrlFunctionServiceRole83916D13
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIGetFileDownloadSignedUrlFunction8B43389C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/ff3eea32345e418e1b66acea36d97b32ef2410cd4208e7e36b19568ed136362c.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIGetFileDownloadSignedUrlFunctionServiceRole83916D13
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIGetFileDownloadSignedUrlFunctionServiceRoleDefaultPolicy2880D406
      - APIGetFileDownloadSignedUrlFunctionServiceRole83916D13
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.ff3eea32345e418e1b66acea36d97b32ef2410cd4208e7e36b19568ed136362c
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIDeleteFileFunctionServiceRoleCEF08B07:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteFileFunctionServiceRoleDefaultPolicy2347797A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:DeleteObject*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - APIFileBucket8FB29855
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: APIDeleteFileFunctionServiceRoleDefaultPolicy2347797A
      Roles:
        - Ref: APIDeleteFileFunctionServiceRoleCEF08B07
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIDeleteFileFunctionC52312C7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/a4cdf9b950df1fd87464e8f2edd771b8c49f5276e943a9a5fbf6214e3e6833b3.zip
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: APIFileBucket8FB29855
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - APIDeleteFileFunctionServiceRoleCEF08B07
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - APIDeleteFileFunctionServiceRoleDefaultPolicy2347797A
      - APIDeleteFileFunctionServiceRoleCEF08B07
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.a4cdf9b950df1fd87464e8f2edd771b8c49f5276e943a9a5fbf6214e3e6833b3
      aws:asset:is-bundled: true
      aws:asset:property: Code
  APIAuthorizer9DCC037B:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      IdentitySource: method.request.header.Authorization
      Name: GenerativeAiUseCasesStackAPIAuthorizer21D53881
      ProviderARNs:
        - Fn::GetAtt:
            - AuthUserPool8115E87F
            - Arn
      RestApiId:
        Ref: APIApiFFA96F67
      Type: COGNITO_USER_POOLS
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiFFA96F67:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Api
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiCloudWatchRoleD747A0A6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiAccountF2C87424:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - APIApiCloudWatchRoleD747A0A6
          - Arn
    DependsOn:
      - APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiDeployment3A502123d737f8f43e005b29b742e0ba9ca1dc5c:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: APIApiFFA96F67
    DependsOn:
      - APIApiApi4XXDCF913C8
      - APIApiApi5XX11B67643
      - APIApichatschatIdDELETE4578D41B
      - APIApichatschatIdfeedbacksOPTIONS7AB34AA5
      - APIApichatschatIdfeedbacksPOST3E9ACBEC
      - APIApichatschatIdfeedbacksF371F57A
      - APIApichatschatIdGET152C9123
      - APIApichatschatIdmessagesGET94AB097F
      - APIApichatschatIdmessagesOPTIONS20207E07
      - APIApichatschatIdmessagesPOST4197DA8F
      - APIApichatschatIdmessagesAF527CE8
      - APIApichatschatIdOPTIONS4498230E
      - APIApichatschatIdE67019A6
      - APIApichatschatIdtitleOPTIONSFA0EB6B7
      - APIApichatschatIdtitlePUT15099F54
      - APIApichatschatIdtitleC5AEA917
      - APIApichatsGET40767623
      - APIApichatsOPTIONSDFF708CB
      - APIApichatsPOSTF32299AA
      - APIApichatsE061702A
      - APIApifilefileNameDELETE54EB1050
      - APIApifilefileNameOPTIONS6C97AC5A
      - APIApifilefileName2B0471F4
      - APIApifileOPTIONS64A72556
      - APIApifile76AB343B
      - APIApifileurlGET6E9EDFE6
      - APIApifileurlOPTIONS658BFB93
      - APIApifileurlPOST73D5BB3A
      - APIApifileurl08DA507F
      - APIApiimagegenerateOPTIONS58BC3827
      - APIApiimagegeneratePOST0F60597D
      - APIApiimagegenerate70662BCD
      - APIApiimageOPTIONSA57099DB
      - APIApiimage6FBCA1DF
      - APIApiOPTIONSE134DC36
      - APIApipredictOPTIONS9065A8D6
      - APIApipredictPOST376D7D2E
      - APIApipredict6CA3C413
      - APIApipredicttitleOPTIONS3DCF08ED
      - APIApipredicttitlePOSTAC11F63E
      - APIApipredicttitle8F6A9913
      - APIApiragOPTIONSAF55562D
      - APIApiragqueryOPTIONS0831C743
      - APIApiragqueryPOST959F42AE
      - APIApiragqueryBFCC1FE8
      - APIApiragB0FA73F7
      - APIApiragretrieveOPTIONS76F86387
      - APIApiragretrievePOST1B75699C
      - APIApiragretrieve8A07B1EB
      - APIApishareschatchatIdGETFD670180
      - APIApishareschatchatIdOPTIONSBA4BB233
      - APIApishareschatchatIdPOSTC94D0E3B
      - APIApishareschatchatIdABA7B83C
      - APIApishareschatOPTIONSB4A81F6A
      - APIApishareschatA32CD614
      - APIApisharesOPTIONSF1049E3B
      - APIApishares3C1C04E5
      - APIApisharesshareshareIdDELETE231A4EBF
      - APIApisharesshareshareIdGETADBE379F
      - APIApisharesshareshareIdOPTIONSC762F46F
      - APIApisharesshareshareId3696CDAF
      - APIApisharesshareOPTIONS6D42A67D
      - APIApisharesshareF2EC0273
      - APIApisystemcontextssystemContextIdDELETEB527E743
      - APIApisystemcontextssystemContextIdOPTIONS96E8D02C
      - APIApisystemcontextssystemContextId9D6F9E56
      - APIApisystemcontextssystemContextIdtitleOPTIONS069062F2
      - APIApisystemcontextssystemContextIdtitlePUT66B31C9A
      - APIApisystemcontextssystemContextIdtitleD469F521
      - APIApisystemcontextsGET7ECB64D3
      - APIApisystemcontextsOPTIONS0D2703AA
      - APIApisystemcontextsPOST3883EC4A
      - APIApisystemcontexts57785227
      - APIApitranscribeOPTIONS5030955A
      - APIApitranscribe874542A9
      - APIApitranscriberesultjobNameGET5C0FF2AB
      - APIApitranscriberesultjobNameOPTIONS7E77FDC0
      - APIApitranscriberesultjobName32470D3A
      - APIApitranscriberesultOPTIONS36EC9D59
      - APIApitranscriberesult3CDED854
      - APIApitranscribestartOPTIONSFA1C7723
      - APIApitranscribestartPOSTC6AF1C94
      - APIApitranscribestartB105DFD0
      - APIApitranscribeurlOPTIONS6B7DF1F0
      - APIApitranscribeurlPOSTFBEEA27D
      - APIApitranscribeurlAA281183
      - APIApiwebtextGETB44776EB
      - APIApiwebtextOPTIONS5EFD2A2D
      - APIApiwebtext0828B9D5
      - APIAuthorizer9DCC037B
      - RagAuthorizer1D577454
      - TranscribeAuthorizerAD1EA74B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiDeploymentStageapiCD55D117:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Fn::If:
          - RagEnabled
          - Ref: APIApiDeployment3A502123d737f8f43e005b29b742e0ba9ca1dc5c
          - Ref: APIApiDeployment3A502123671b5ca1ab7fd355c4257b9261a52e6e
      RestApiId:
        Ref: APIApiFFA96F67
      StageName: api
    DependsOn:
      - APIApiAccountF2C87424
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiOPTIONSE134DC36:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredict6CA3C413:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: predict
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredictOPTIONS9065A8D6:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApipredict6CA3C413
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredictPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTpredict03DB8E81:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIPredict09E4E4FF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/predict
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredictPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTpredictFAF8FA72:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIPredict09E4E4FF
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/predict
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredictPOST376D7D2E:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIPredict09E4E4FF
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApipredict6CA3C413
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredicttitle8F6A9913:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApipredict6CA3C413
      PathPart: title
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredicttitleOPTIONS3DCF08ED:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApipredicttitle8F6A9913
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredicttitlePOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTpredicttitle9C698441:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIPredictTitle95F64FA4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/predict/title
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredicttitlePOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTpredicttitleF8561C52:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIPredictTitle95F64FA4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/predict/title
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApipredicttitlePOSTAC11F63E:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIPredictTitle95F64FA4
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApipredicttitle8F6A9913
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsE061702A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: chats
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsOPTIONSDFF708CB:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApichatsE061702A
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTchats6FB5CEC9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateChatE07AFAF4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/chats
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTchatsE0E202B2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateChatE07AFAF4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/chats
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsPOSTF32299AA:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APICreateChatE07AFAF4
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatsE061702A
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETchats3464EF3A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIListChats12807275
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/chats
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETchatsE1DE3C5A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIListChats12807275
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/chats
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatsGET40767623:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIListChats12807275
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatsE061702A
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdE67019A6:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApichatsE061702A
      PathPart: '{chatId}'
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdOPTIONS4498230E:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApichatschatIdE67019A6
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETchatschatIdC82A138E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIFindChatbyId74476825
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/chats/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETchatschatIdCA130D83:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIFindChatbyId74476825
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/chats/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdGET152C9123:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIFindChatbyId74476825
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatschatIdE67019A6
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdDELETEApiPermissionGenerativeAiUseCasesStackAPIApi89219E17DELETEchatschatIdCBAD7732:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteChat1517278C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /DELETE/chats/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdDELETEApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17DELETEchatschatId6DBAD3C3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteChat1517278C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/DELETE/chats/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdDELETE4578D41B:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIDeleteChat1517278C
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatschatIdE67019A6
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdtitleC5AEA917:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApichatschatIdE67019A6
      PathPart: title
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdtitleOPTIONSFA0EB6B7:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApichatschatIdtitleC5AEA917
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdtitlePUTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17PUTchatschatIdtitleF57C315F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIUpdateChatTitleF8FCA547
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /PUT/chats/*/title
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdtitlePUTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17PUTchatschatIdtitle5F294013:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIUpdateChatTitleF8FCA547
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/PUT/chats/*/title
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdtitlePUT15099F54:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: PUT
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIUpdateChatTitleF8FCA547
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatschatIdtitleC5AEA917
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesAF527CE8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApichatschatIdE67019A6
      PathPart: messages
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesOPTIONS20207E07:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApichatschatIdmessagesAF527CE8
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETchatschatIdmessages122A59FC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIListMessages536ED2CC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/chats/*/messages
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETchatschatIdmessages3F025E8E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIListMessages536ED2CC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/chats/*/messages
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesGET94AB097F:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIListMessages536ED2CC
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatschatIdmessagesAF527CE8
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTchatschatIdmessages832E69DC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateMessages1C3421C0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/chats/*/messages
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTchatschatIdmessagesDB24918A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateMessages1C3421C0
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/chats/*/messages
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdmessagesPOST4197DA8F:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APICreateMessages1C3421C0
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatschatIdmessagesAF527CE8
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdfeedbacksF371F57A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApichatschatIdE67019A6
      PathPart: feedbacks
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdfeedbacksOPTIONS7AB34AA5:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApichatschatIdfeedbacksF371F57A
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdfeedbacksPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTchatschatIdfeedbacksE8588286:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIUpdateFeedback2F9276A1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/chats/*/feedbacks
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdfeedbacksPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTchatschatIdfeedbacks52610594:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIUpdateFeedback2F9276A1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/chats/*/feedbacks
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApichatschatIdfeedbacksPOST3E9ACBEC:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIUpdateFeedback2F9276A1
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApichatschatIdfeedbacksF371F57A
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontexts57785227:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: systemcontexts
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextsOPTIONS0D2703AA:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApisystemcontexts57785227
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextsPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTsystemcontexts30E77A37:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateSystemContextsB5DC1BC2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/systemcontexts
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextsPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTsystemcontexts9936F5B4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateSystemContextsB5DC1BC2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/systemcontexts
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextsPOST3883EC4A:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APICreateSystemContextsB5DC1BC2
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApisystemcontexts57785227
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextsGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETsystemcontextsDB07D691:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIListSystemContexts08AE4129
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/systemcontexts
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextsGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETsystemcontextsF0766633:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIListSystemContexts08AE4129
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/systemcontexts
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextsGET7ECB64D3:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIListSystemContexts08AE4129
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApisystemcontexts57785227
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextssystemContextId9D6F9E56:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApisystemcontexts57785227
      PathPart: '{systemContextId}'
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextssystemContextIdOPTIONS96E8D02C:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApisystemcontextssystemContextId9D6F9E56
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ? APIApisystemcontextssystemContextIdDELETEApiPermissionGenerativeAiUseCasesStackAPIApi89219E17DELETEsystemcontextssystemContextId630D4328
  : Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteSystemContexts7B545538
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /DELETE/systemcontexts/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ? APIApisystemcontextssystemContextIdDELETEApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17DELETEsystemcontextssystemContextId35BF96AA
  : Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteSystemContexts7B545538
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/DELETE/systemcontexts/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextssystemContextIdDELETEB527E743:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIDeleteSystemContexts7B545538
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApisystemcontextssystemContextId9D6F9E56
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextssystemContextIdtitleD469F521:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApisystemcontextssystemContextId9D6F9E56
      PathPart: title
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextssystemContextIdtitleOPTIONS069062F2:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApisystemcontextssystemContextIdtitleD469F521
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ? APIApisystemcontextssystemContextIdtitlePUTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17PUTsystemcontextssystemContextIdtitle58A35261
  : Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIUpdateSystemContextTitle5806E033
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /PUT/systemcontexts/*/title
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ? APIApisystemcontextssystemContextIdtitlePUTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17PUTsystemcontextssystemContextIdtitleE4838F65
  : Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIUpdateSystemContextTitle5806E033
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/PUT/systemcontexts/*/title
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisystemcontextssystemContextIdtitlePUT66B31C9A:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: PUT
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIUpdateSystemContextTitle5806E033
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApisystemcontextssystemContextIdtitleD469F521
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiimage6FBCA1DF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: image
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiimageOPTIONSA57099DB:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApiimage6FBCA1DF
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiimagegenerate70662BCD:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApiimage6FBCA1DF
      PathPart: generate
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiimagegenerateOPTIONS58BC3827:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApiimagegenerate70662BCD
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiimagegeneratePOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTimagegenerate41F8E49F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGenerateImage777647C7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/image/generate
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiimagegeneratePOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTimagegenerateFE576B22:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGenerateImage777647C7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/image/generate
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiimagegeneratePOST0F60597D:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIGenerateImage777647C7
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApiimagegenerate70662BCD
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiwebtext0828B9D5:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: web-text
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiwebtextOPTIONS5EFD2A2D:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApiwebtext0828B9D5
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiwebtextGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETwebtext02F70E92:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetWebText363F573D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/web-text
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiwebtextGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETwebtext850757AA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetWebText363F573D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/web-text
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiwebtextGETB44776EB:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIGetWebText363F573D
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApiwebtext0828B9D5
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishares3C1C04E5:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: shares
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesOPTIONSF1049E3B:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApishares3C1C04E5
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatA32CD614:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApishares3C1C04E5
      PathPart: chat
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatOPTIONSB4A81F6A:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApishareschatA32CD614
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdABA7B83C:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApishareschatA32CD614
      PathPart: '{chatId}'
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdOPTIONSBA4BB233:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApishareschatchatIdABA7B83C
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETshareschatchatId4FEA8BD7:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIFindShareId3F1AA77B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/shares/chat/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETshareschatchatId9DA80291:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIFindShareId3F1AA77B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/shares/chat/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdGETFD670180:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIFindShareId3F1AA77B
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApishareschatchatIdABA7B83C
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTshareschatchatId5D45558E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateShareId3D7F7B2B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/shares/chat/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTshareschatchatIdD6448444:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APICreateShareId3D7F7B2B
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/shares/chat/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApishareschatchatIdPOSTC94D0E3B:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APICreateShareId3D7F7B2B
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApishareschatchatIdABA7B83C
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareF2EC0273:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApishares3C1C04E5
      PathPart: share
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareOPTIONS6D42A67D:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApisharesshareF2EC0273
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareId3696CDAF:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApisharesshareF2EC0273
      PathPart: '{shareId}'
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareIdOPTIONSC762F46F:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApisharesshareshareId3696CDAF
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareIdGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETsharesshareshareIdF221D57E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetSharedChatF02561ED
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/shares/share/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareIdGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETsharesshareshareIdA0DBEBA8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetSharedChatF02561ED
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/shares/share/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareIdGETADBE379F:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIGetSharedChatF02561ED
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApisharesshareshareId3696CDAF
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareIdDELETEApiPermissionGenerativeAiUseCasesStackAPIApi89219E17DELETEsharesshareshareId73BA7001:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteShareIdFE187370
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /DELETE/shares/share/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareIdDELETEApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17DELETEsharesshareshareId451B7B87:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteShareIdFE187370
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/DELETE/shares/share/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApisharesshareshareIdDELETE231A4EBF:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIDeleteShareIdFE187370
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApisharesshareshareId3696CDAF
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifile76AB343B:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: file
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileOPTIONS64A72556:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApifile76AB343B
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurl08DA507F:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApifile76AB343B
      PathPart: url
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurlOPTIONS658BFB93:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApifileurl08DA507F
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurlPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTfileurl83D310CC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetSignedUrl0A6EC682
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/file/url
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurlPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTfileurlB327A180:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetSignedUrl0A6EC682
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/file/url
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurlPOST73D5BB3A:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIGetSignedUrl0A6EC682
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApifileurl08DA507F
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurlGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETfileurl0485E8FF:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetFileDownloadSignedUrlFunction8B43389C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/file/url
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurlGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETfileurl88BCDC54:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIGetFileDownloadSignedUrlFunction8B43389C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/file/url
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifileurlGET6E9EDFE6:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIGetFileDownloadSignedUrlFunction8B43389C
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApifileurl08DA507F
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifilefileName2B0471F4:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApifile76AB343B
      PathPart: '{fileName}'
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifilefileNameOPTIONS6C97AC5A:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApifilefileName2B0471F4
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifilefileNameDELETEApiPermissionGenerativeAiUseCasesStackAPIApi89219E17DELETEfilefileName48EC68D3:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteFileFunctionC52312C7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /DELETE/file/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifilefileNameDELETEApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17DELETEfilefileName6979E07E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - APIDeleteFileFunctionC52312C7
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/DELETE/file/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApifilefileNameDELETE54EB1050:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: APIAuthorizer9DCC037B
      HttpMethod: DELETE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - APIDeleteFileFunctionC52312C7
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApifilefileName2B0471F4
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiragB0FA73F7:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: rag
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragOPTIONSAF55562D:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApiragB0FA73F7
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragqueryBFCC1FE8:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApiragB0FA73F7
      PathPart: query
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragqueryOPTIONS0831C743:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApiragqueryBFCC1FE8
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragqueryPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTragquery34589789:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RagQuery46261080
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/rag/query
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragqueryPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTragquery4D39714A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RagQuery46261080
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/rag/query
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragqueryPOST959F42AE:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: RagAuthorizer1D577454
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RagQuery46261080
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApiragqueryBFCC1FE8
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragretrieve8A07B1EB:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApiragB0FA73F7
      PathPart: retrieve
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragretrieveOPTIONS76F86387:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApiragretrieve8A07B1EB
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragretrievePOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTragretrieve4FD20ADA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RagRetrieve78B54C98
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/rag/retrieve
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragretrievePOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTragretrieve5954A588:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - RagRetrieve78B54C98
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/rag/retrieve
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApiragretrievePOST1B75699C:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: RagAuthorizer1D577454
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - RagRetrieve78B54C98
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApiragretrieve8A07B1EB
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  APIApitranscribe874542A9:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - APIApiFFA96F67
          - RootResourceId
      PathPart: transcribe
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribeOPTIONS5030955A:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApitranscribe874542A9
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribestartB105DFD0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApitranscribe874542A9
      PathPart: start
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribestartOPTIONSFA1C7723:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApitranscribestartB105DFD0
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribestartPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTtranscribestart805B4A00:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TranscribeStartTranscription7C6A7A96
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/transcribe/start
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribestartPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTtranscribestartB4BBCC0F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TranscribeStartTranscription7C6A7A96
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/transcribe/start
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribestartPOSTC6AF1C94:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: TranscribeAuthorizerAD1EA74B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TranscribeStartTranscription7C6A7A96
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApitranscribestartB105DFD0
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribeurlAA281183:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApitranscribe874542A9
      PathPart: url
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribeurlOPTIONS6B7DF1F0:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApitranscribeurlAA281183
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribeurlPOSTApiPermissionGenerativeAiUseCasesStackAPIApi89219E17POSTtranscribeurl0730085A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TranscribeGetSignedUrlB23CCF77
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /POST/transcribe/url
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribeurlPOSTApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17POSTtranscribeurl5D712187:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TranscribeGetSignedUrlB23CCF77
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/POST/transcribe/url
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscribeurlPOSTFBEEA27D:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: TranscribeAuthorizerAD1EA74B
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TranscribeGetSignedUrlB23CCF77
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApitranscribeurlAA281183
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscriberesult3CDED854:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApitranscribe874542A9
      PathPart: result
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscriberesultOPTIONS36EC9D59:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApitranscriberesult3CDED854
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscriberesultjobName32470D3A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: APIApitranscriberesult3CDED854
      PathPart: '{jobName}'
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscriberesultjobNameOPTIONS7E77FDC0:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'''
            StatusCode: "204"
        RequestTemplates:
          application/json: '{ statusCode: 200 }'
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: APIApitranscriberesultjobName32470D3A
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscriberesultjobNameGETApiPermissionGenerativeAiUseCasesStackAPIApi89219E17GETtranscriberesultjobName373CF04F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TranscribeGetTranscription3C736BFC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /
            - Ref: APIApiDeploymentStageapiCD55D117
            - /GET/transcribe/result/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscriberesultjobNameGETApiPermissionTestGenerativeAiUseCasesStackAPIApi89219E17GETtranscriberesultjobName7DED403C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TranscribeGetTranscription3C736BFC
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - 'arn:aws:execute-api:ap-northeast-1:'
            - Ref: AWS::AccountId
            - ':'
            - Ref: APIApiFFA96F67
            - /test-invoke-stage/GET/transcribe/result/*
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApitranscriberesultjobNameGET5C0FF2AB:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: TranscribeAuthorizerAD1EA74B
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TranscribeGetTranscription3C736BFC
                  - Arn
              - /invocations
      ResourceId:
        Ref: APIApitranscriberesultjobName32470D3A
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiApi4XXDCF913C8:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      ResponseType: DEFAULT_4XX
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiApi5XX11B67643:
    Type: AWS::ApiGateway::GatewayResponse
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      ResponseType: DEFAULT_5XX
      RestApiId:
        Ref: APIApiFFA96F67
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs20.x
      Description:
        Fn::Join:
          - ""
          - - 'Lambda function for auto-deleting objects in '
            - Ref: APIFileBucket8FB29855
            - ' S3 bucket.'
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6
      aws:asset:property: Code
  RegionalWafIPv4SetRegionalWafC97A1317:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses:
        Fn::If:
          - AllowedIpV4AddressRanges
          - Fn::Split:
              - ','
              - Ref: AllowedIpV4AddressRanges
          - []
      IPAddressVersion: IPV4
      Scope: REGIONAL
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RegionalWafIPv6SetRegionalWafFC86560A:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses:
        Fn::If:
          - AllowedIpV6AddressRanges
          - Fn::Split:
              - ','
              - Ref: AllowedIpV6AddressRanges
          - []
      IPAddressVersion: IPV6
      Scope: REGIONAL
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RegionalWafWebAclRegionalWaf7F1BE9A6:
    Type: AWS::WAFv2::WebACL
    Properties:
      DefaultAction:
        Block: {}
      Name: WebAclRegionalWaf
      Rules:
        - Action:
            Allow: {}
          Name: IpV4SetRuleRegionalWaf
          Priority: 1
          Statement:
            IPSetReferenceStatement:
              Arn:
                Fn::GetAtt:
                  - RegionalWafIPv4SetRegionalWafC97A1317
                  - Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: IpV4SetRuleRegionalWaf
            SampledRequestsEnabled: true
        - Action:
            Allow: {}
          Name: IpV6SetRuleRegionalWaf
          Priority: 2
          Statement:
            IPSetReferenceStatement:
              Arn:
                Fn::GetAtt:
                  - RegionalWafIPv6SetRegionalWafFC86560A
                  - Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: IpV6SetRuleRegionalWaf
            SampledRequestsEnabled: true
      Scope: REGIONAL
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        MetricName: WebAclRegionalWaf
        SampledRequestsEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWafAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn:
        Fn::Join:
          - ""
          - - arn:aws:apigateway:ap-northeast-1::/restapis/
            - Ref: APIApiFFA96F67
            - /stages/
            - Ref: APIApiDeploymentStageapiCD55D117
      WebACLArn:
        Fn::GetAtt:
          - RegionalWafWebAclRegionalWaf7F1BE9A6
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  UserPoolWafAssociation:
    Type: AWS::WAFv2::WebACLAssociation
    Properties:
      ResourceArn:
        Fn::GetAtt:
          - AuthUserPool8115E87F
          - Arn
      WebACLArn:
        Fn::GetAtt:
          - RegionalWafWebAclRegionalWaf7F1BE9A6
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebS3LoggingBucket16DF416B:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: This S3 bucket is used as the access logging bucket for another bucket
  ApiWebS3LoggingBucketPolicyC0768FF8:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ApiWebS3LoggingBucket16DF416B
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - ApiWebS3LoggingBucket16DF416B
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebS3LoggingBucket16DF416B
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - ApiWebS3LoggingBucket16DF416B
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebS3LoggingBucket16DF416B
                        - Arn
                    - /*
          - Action: s3:PutObject
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - ApiWebS3Bucket26EF98D6
                    - Arn
              StringEquals:
                aws:SourceAccount:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ApiWebS3LoggingBucket16DF416B
                      - Arn
                  - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebS3LoggingBucketAutoDeleteObjectsCustomResourceB650DEF6:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: ApiWebS3LoggingBucket16DF416B
    DependsOn:
      - ApiWebS3LoggingBucketPolicyC0768FF8
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebS3Bucket26EF98D6:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionTransitions:
              - StorageClass: GLACIER
                TransitionInDays: 90
            Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: ApiWebS3LoggingBucket16DF416B
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:682696bb
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebS3BucketPolicy9921124D:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ApiWebS3Bucket26EF98D6
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - ApiWebS3Bucket26EF98D6
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebS3Bucket26EF98D6
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - ApiWebS3Bucket26EF98D6
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebS3Bucket26EF98D6
                        - Arn
                    - /*
          - Action: s3:GetObject
            Condition:
              StringEquals:
                AWS:SourceArn:
                  Fn::Join:
                    - ""
                    - - 'arn:aws:cloudfront::'
                      - Ref: AWS::AccountId
                      - :distribution/
                      - Ref: ApiWebCloudFrontDistributionA115FBC3
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ApiWebS3Bucket26EF98D6
                      - Arn
                  - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F16
            reason: Public website bucket policy requires a wildcard principal
  ApiWebS3BucketAutoDeleteObjectsCustomResource533BC7D3:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: ApiWebS3Bucket26EF98D6
    DependsOn:
      - ApiWebS3BucketPolicy9921124D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebCloudfrontLoggingBucketAccessLogFF7274FB:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: This S3 bucket is used as the access logging bucket for another bucket
  ApiWebCloudfrontLoggingBucketAccessLogPolicy7E5F08FD:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
                        - Arn
                    - /*
          - Action: s3:PutObject
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - ApiWebCloudfrontLoggingBucketD22C7B67
                    - Arn
              StringEquals:
                aws:SourceAccount:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
                      - Arn
                  - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebCloudfrontLoggingBucketAccessLogAutoDeleteObjectsCustomResource38368B94:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
    DependsOn:
      - ApiWebCloudfrontLoggingBucketAccessLogPolicy7E5F08FD
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebCloudfrontLoggingBucketD22C7B67:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName:
          Ref: ApiWebCloudfrontLoggingBucketAccessLogFF7274FB
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebCloudfrontLoggingBucketPolicy30112EB3:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ApiWebCloudfrontLoggingBucketD22C7B67
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - ApiWebCloudfrontLoggingBucketD22C7B67
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebCloudfrontLoggingBucketD22C7B67
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - ApiWebCloudfrontLoggingBucketD22C7B67
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebCloudfrontLoggingBucketD22C7B67
                        - Arn
                    - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebCloudfrontLoggingBucketAutoDeleteObjectsCustomResourceBCE48929:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: ApiWebCloudfrontLoggingBucketD22C7B67
    DependsOn:
      - ApiWebCloudfrontLoggingBucketPolicy30112EB3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebCloudFrontOacD98C7E9E:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: Origin access control provisioned by aws-cloudfront-s3
        Name:
          Fn::Join:
            - ""
            - - aws-cloudfront-s3-Web-
              - Fn::Select:
                  - 2
                  - Fn::Split:
                      - /
                      - Ref: AWS::StackId
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiWebCloudFrontDistributionA115FBC3:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: GenerativeAiUseCasesStackApiWebCloudFrontDistributionOrigin15479CB7B
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket:
            Fn::GetAtt:
              - ApiWebCloudfrontLoggingBucketD22C7B67
              - RegionalDomainName
        Origins:
          - DomainName:
              Fn::GetAtt:
                - ApiWebS3Bucket26EF98D6
                - RegionalDomainName
            Id: GenerativeAiUseCasesStackApiWebCloudFrontDistributionOrigin15479CB7B
            OriginAccessControlId:
              Fn::GetAtt:
                - ApiWebCloudFrontOacD98C7E9E
                - Id
            S3OriginConfig:
              OriginAccessIdentity: ""
        WebACLId:
          Fn::GetAtt:
            - ExportsReader8B249524
            - /cdk/exports/GenerativeAiUseCasesStack/CloudFrontWafStackuseast1FnGetAttWebAclCloudFrontWafStackWebAclWebAclCloudFrontWafStackAC643995Arn68A112D4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W70
            reason: Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion
  ApiBuildWebProjectRole8A770CFE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiBuildWebProjectRoleDefaultPolicyEA537DDE:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - 'arn:aws:logs:ap-northeast-1:'
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ApiBuildWebProjectDF2CE9D0
                    - :*
              - Fn::Join:
                  - ""
                  - - 'arn:aws:logs:ap-northeast-1:'
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: ApiBuildWebProjectDF2CE9D0
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - 'arn:aws:codebuild:ap-northeast-1:'
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: ApiBuildWebProjectDF2CE9D0
                  - -*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - 'arn:aws:s3:::'
                    - ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
                    - /*
              - Fn::Join:
                  - ""
                  - - 'arn:aws:s3:::'
                    - ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::Sub: arn:aws:s3:::${BuildArtifactBucket}
              - Fn::Sub: arn:aws:s3:::${BuildArtifactBucket}/*
        Version: "2012-10-17"
      PolicyName: ApiBuildWebProjectRoleDefaultPolicyEA537DDE
      Roles:
        - Ref: ApiBuildWebProjectRole8A770CFE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiBuildWebProjectDF2CE9D0:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - ApiBuildWebProjectRole8A770CFE
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "env": {
              "shell": "bash"
            },
            "phases": {
              "install": {
                "runtime-versions": {
                  "nodejs": 18
                }
              },
              "build": {
                "commands": [
                  "current_dir=$(pwd)",
                  "\necho \"$input\"\nfor obj in $(echo \"$input\" | jq -r '.[] | @base64'); do\n  decoded=$(echo \"$obj\" | base64 --decode)\n  assetUrl=$(echo \"$decoded\" | jq -r '.assetUrl')\n  extractPath=$(echo \"$decoded\" | jq -r '.extractPath')\n  commands=$(echo \"$decoded\" | jq -r '.commands')\n\n  # Download the zip file\n  aws s3 cp \"$assetUrl\" temp.zip\n\n  # Extract the zip file to the extractPath directory\n  mkdir -p \"$extractPath\"\n  unzip temp.zip -d \"$extractPath\"\n\n  # Remove the zip file\n  rm temp.zip\n\n  # Run the specified commands in the extractPath directory\n  cd \"$extractPath\"\n  ls -la\n  eval \"$commands\"\n  cd \"$current_dir\"\n  ls -la\ndone\n              ",
                  "ls -la",
                  "cd \"$workingDirectory\"",
                  "eval \"$buildCommands\"",
                  "ls -la",
                  "cd \"$current_dir\"",
                  "cd \"$outputSourceDirectory\"",
                  "zip -r output.zip ./",
                  "aws s3 cp output.zip \"s3://$destinationBucketName/$destinationObjectKey\"",
                  "\nif [[ $outputEnvFile == \"true\" ]]\nthen\n  # Split the comma-separated string into an array\n  for var_name in ${envNames//,/ }\n  do\n      echo \"Element: $var_name\"\n      var_value=\"${!var_name}\"\n      echo \"$var_name=$var_value\" >> tmp.env\n  done\n\n  aws s3 cp tmp.env \"s3://$destinationBucketName/$envFileKey\"\nfi\n              "
                ]
              },
              "post_build": {
                "commands": [
                  "echo Build completed on `date`",
                  "\nSTATUS='SUCCESS'\nif [ $CODEBUILD_BUILD_SUCCEEDING -ne 1 ] # Test if the build is failing\nthen\nSTATUS='FAILED'\nREASON=\"NodejsBuild failed. See CloudWatch Log stream for the detailed reason: \nhttps://$AWS_REGION.console.aws.amazon.com/cloudwatch/home?region=$AWS_REGION#logsV2:log-groups/log-group/\\$252Faws\\$252Fcodebuild\\$252F$projectName/log-events/$CODEBUILD_LOG_PATH\"\nfi\ncat <<EOF > payload.json\n{\n  \"StackId\": \"$stackId\",\n  \"RequestId\": \"$requestId\",\n  \"LogicalResourceId\":\"$logicalResourceId\",\n  \"PhysicalResourceId\": \"$logicalResourceId\",\n  \"Status\": \"$STATUS\",\n  \"Reason\": \"$REASON\",\n  \"Data\": {\n    \"destinationObjectKey\": \"$destinationObjectKey\",\n    \"envFileKey\": \"$envFileKey\"\n  }\n}\nEOF\ncurl -v -i -X PUT -H 'Content-Type:' -d \"@payload.json\" \"$responseURL\"\n              "
                ]
              }
            }
          }
        Type: NO_SOURCE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiBuildWeb746ABF13:
    Type: Custom::CDKNodejsBuild
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8
          - Arn
      type: NodejsBuild
      sources:
        - sourceBucketName:
            ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
          sourceObjectKey: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/2d32b1cdeb94dcd5f073f0f3f249173436a2c7909332b47e1231cc71ad51a526.zip
          extractPath: ..
      destinationBucketName:
        Ref: BuildArtifactBucket
      workingDirectory: ..
      outputSourceDirectory: ../packages/web/dist
      environment:
        VITE_APP_API_ENDPOINT:
          Fn::Join:
            - ""
            - - https://
              - Ref: APIApiFFA96F67
              - .execute-api.ap-northeast-1.
              - Ref: AWS::URLSuffix
              - /
              - Ref: APIApiDeploymentStageapiCD55D117
              - /
        VITE_APP_REGION: ap-northeast-1
        VITE_APP_USER_POOL_ID:
          Ref: AuthUserPool8115E87F
        VITE_APP_USER_POOL_CLIENT_ID:
          Ref: AuthUserPoolclientA74673A9
        VITE_APP_IDENTITY_POOL_ID:
          Ref: AuthIdentityPool659E7F64
        VITE_APP_PREDICT_STREAM_FUNCTION_ARN:
          Fn::GetAtt:
            - APIPredictStream44DDBC25
            - Arn
        VITE_APP_RAG_ENABLED:
          Ref: RagEnabled
        VITE_APP_RAG_KNOWLEDGE_BASE_ENABLED: "false"
        VITE_APP_AGENT_ENABLED: "false"
        VITE_APP_SELF_SIGN_UP_ENABLED:
          Ref: SelfSignUpEnabled
        VITE_APP_MODEL_REGION:
          Ref: ModelRegion
        VITE_APP_MODEL_IDS:
          Fn::Sub:
            - '["${ModelIds}"]'
            - ModelIds:
                Fn::Join:
                  - '","'
                  - Ref: ModelIds
        VITE_APP_MULTI_MODAL_MODEL_IDS: '["anthropic.claude-3-5-sonnet-20240620-v1:0","anthropic.claude-3-opus-20240229-v1:0","anthropic.claude-3-sonnet-20240229-v1:0","anthropic.claude-3-haiku-20240307-v1:0","us.anthropic.claude-3-5-sonnet-20240620-v1:0","us.anthropic.claude-3-opus-20240229-v1:0","us.anthropic.claude-3-sonnet-20240229-v1:0","us.anthropic.claude-3-haiku-20240307-v1:0","eu.anthropic.claude-3-5-sonnet-20240620-v1:0","eu.anthropic.claude-3-sonnet-20240229-v1:0","eu.anthropic.claude-3-haiku-20240307-v1:0","us.meta.llama3-2-11b-instruct-v1:0","us.meta.llama3-2-90b-instruct-v1:0"]'
        VITE_APP_IMAGE_MODEL_IDS:
          Fn::Sub:
            - '["${ImageGenerationModelIds}"]'
            - ImageGenerationModelIds:
                Fn::Join:
                  - '","'
                  - Ref: ImageGenerationModelIds
        VITE_APP_ENDPOINT_NAMES: '[]'
        VITE_APP_SAMLAUTH_ENABLED: "false"
        VITE_APP_SAML_COGNITO_DOMAIN_NAME: ""
        VITE_APP_SAML_COGNITO_FEDERATED_IDENTITY_PROVIDER_NAME: ""
        VITE_APP_AGENT_NAMES: '[]'
        VITE_APP_RECOGNIZE_FILE_ENABLED: "false"
      buildCommands:
        - npm ci
        - npm run web:build
      codeBuildProjectName:
        Ref: ApiBuildWebProjectDF2CE9D0
      outputEnvFile: false
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ApiBuildWebDeployAwsCliLayer187512BE:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      Description: /opt/awscli/aws
    DependsOn:
      - ApiBuildWeb746ABF13
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  ApiBuildWebDeployCustomResourceA9A0D3A1:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Ref: BuildArtifactBucket
      SourceObjectKeys:
        - Fn::GetAtt:
            - ApiBuildWeb746ABF13
            - destinationObjectKey
      DestinationBucketName:
        Ref: ApiWebS3Bucket26EF98D6
      Prune: true
      DistributionId:
        Ref: ApiWebCloudFrontDistributionA115FBC3
      RagEnabled:
        Ref: RagEnabled
      SelfSignUpEnabled:
        Ref: SelfSignUpEnabled
    DependsOn:
      - ApiBuildWeb746ABF13
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codebuild:StartBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ApiBuildWebProjectDF2CE9D0
                - Arn
        Version: "2012-10-17"
      PolicyName: NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3
      Roles:
        - Ref: NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c446591C4101F8:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/aa47254059d94cff79a1f8a5a97c4e8a0e14a3f105d2b089464c0beeeb6cfe8d.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6
          - Arn
      Runtime: nodejs18.x
      Timeout: 300
    DependsOn:
      - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleDefaultPolicyCF8879D3
      - NodejsBuildCustomResourceHandler25648b212c404f09aa65b6bbb0c44659ServiceRoleCB01FBE6
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.aa47254059d94cff79a1f8a5a97c4e8a0e14a3f105d2b089464c0beeeb6cfe8d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - 'arn:aws:s3:::'
                    - ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
                    - /*
              - Fn::Join:
                  - ""
                  - - 'arn:aws:s3:::'
                    - ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ApiWebS3Bucket26EF98D6
                  - Arn
              - Fn::GetAtt:
                  - RagDataSourceBucket091872DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ApiWebS3Bucket26EF98D6
                        - Arn
                    - /*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagDataSourceBucket091872DB
                        - Arn
                    - /*
          - Action:
              - cloudfront:CreateInvalidation
              - cloudfront:GetInvalidation
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Sub: arn:aws:s3:::${BuildArtifactBucket}
              - Fn::Sub: arn:aws:s3:::${BuildArtifactBucket}/*
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c.zip
      Environment:
        Variables:
          AWS_CA_BUNDLE: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      Handler: index.handler
      Layers:
        - Ref: ApiBuildWebDeployAwsCliLayer187512BE
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.9
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagKendraIndexRole183684D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: kendra.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchLogsFullAccess
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagKendraIndexRoleDefaultPolicyFC744A27:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: RagKendraIndexRoleDefaultPolicyFC744A27
      Roles:
        - Ref: RagKendraIndexRole183684D3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagDataSourceBucket091872DB:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        LogFilePrefix: AccessLogs/
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:894706c8
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RagDataSourceBucketPolicyD4E0A087:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: RagDataSourceBucket091872DB
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - RagDataSourceBucket091872DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagDataSourceBucket091872DB
                        - Arn
                    - /*
          - Action: s3:PutObject
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - RagDataSourceBucket091872DB
                    - Arn
              StringEquals:
                aws:SourceAccount:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - RagDataSourceBucket091872DB
                      - Arn
                  - /AccessLogs/*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - RagDataSourceBucket091872DB
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagDataSourceBucket091872DB
                        - Arn
                    - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RagDataSourceBucketAutoDeleteObjectsCustomResource68020032:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: RagDataSourceBucket091872DB
    DependsOn:
      - RagDataSourceBucketPolicyD4E0A087
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RagDeployDocsAwsCliLayerB3D6B7FC:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      Description: /opt/awscli/aws
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
    Condition: RagEnabled
  RagDeployDocsCustomResource65E647DC:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
      SourceObjectKeys:
        - 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/3e2a82783ed07373985ecd5b2d07bf8830498c366a4212a325b50f41a29d1e1d.zip
      DestinationBucketName:
        Ref: RagDataSourceBucket091872DB
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagKendraIndexFEF3924C:
    Type: AWS::Kendra::Index
    Properties:
      Edition: DEVELOPER_EDITION
      Name: generative-ai-use-cases-index
      RoleArn:
        Fn::GetAtt:
          - RagKendraIndexRole183684D3
          - Arn
      UserContextPolicy: USER_TOKEN
      UserTokenConfigurations:
        - JwtTokenTypeConfiguration:
            GroupAttributeField: cognito:groups
            KeyLocation: URL
            URL:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - AuthUserPool8115E87F
                      - ProviderURL
                  - /.well-known/jwks.json
            UserNameAttributeField: cognito:username
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagDataSourceRole3AFE601B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: kendra.amazonaws.com
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagDataSourceRoleDefaultPolicyA0697035:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:ListBucket
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - 'arn:aws:s3:::'
                  - Ref: RagDataSourceBucket091872DB
          - Action: s3:GetObject
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - 'arn:aws:s3:::'
                  - Ref: RagDataSourceBucket091872DB
                  - /*
          - Action:
              - kendra:BatchDeleteDocument
              - kendra:BatchPutDocument
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RagKendraIndexFEF3924C
                - Arn
        Version: "2012-10-17"
      PolicyName: RagDataSourceRoleDefaultPolicyA0697035
      Roles:
        - Ref: RagDataSourceRole3AFE601B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagS3DataSourceDEE56AB6:
    Type: AWS::Kendra::DataSource
    Properties:
      DataSourceConfiguration:
        S3Configuration:
          BucketName:
            Ref: RagDataSourceBucket091872DB
          InclusionPrefixes:
            - docs
      IndexId:
        Fn::GetAtt:
          - RagKendraIndexFEF3924C
          - Id
      LanguageCode: ja
      Name: s3-data-source
      RoleArn:
        Fn::GetAtt:
          - RagDataSourceRole3AFE601B
          - Arn
      Type: S3
    DependsOn:
      - RagKendraIndexFEF3924C
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagQueryServiceRoleF4A9010B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagQueryServiceRoleDefaultPolicy7B690C59:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: kendra:Query
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RagKendraIndexFEF3924C
                - Arn
        Version: "2012-10-17"
      PolicyName: RagQueryServiceRoleDefaultPolicy7B690C59
      Roles:
        - Ref: RagQueryServiceRoleF4A9010B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagQuery46261080:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/bbc5d1fadc2880a200ebaf1da8dde4342c96ea7aac24e9e6c4eee78d589e6000.zip
      Environment:
        Variables:
          INDEX_ID:
            Ref: RagKendraIndexFEF3924C
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - RagQueryServiceRoleF4A9010B
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - RagQueryServiceRoleDefaultPolicy7B690C59
      - RagQueryServiceRoleF4A9010B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.bbc5d1fadc2880a200ebaf1da8dde4342c96ea7aac24e9e6c4eee78d589e6000
      aws:asset:is-bundled: true
      aws:asset:property: Code
    Condition: RagEnabled
  RagRetrieveServiceRoleF745466E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagRetrieveServiceRoleDefaultPolicyDAF1DB92:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: kendra:Retrieve
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RagKendraIndexFEF3924C
                - Arn
        Version: "2012-10-17"
      PolicyName: RagRetrieveServiceRoleDefaultPolicyDAF1DB92
      Roles:
        - Ref: RagRetrieveServiceRoleF745466E
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  RagRetrieve78B54C98:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/ba916c4d193891feda1954142f7d19ef4be96392d0a9c4e26cb8e019e2146a9c.zip
      Environment:
        Variables:
          INDEX_ID:
            Ref: RagKendraIndexFEF3924C
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - RagRetrieveServiceRoleF745466E
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - RagRetrieveServiceRoleDefaultPolicyDAF1DB92
      - RagRetrieveServiceRoleF745466E
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.ba916c4d193891feda1954142f7d19ef4be96392d0a9c4e26cb8e019e2146a9c
      aws:asset:is-bundled: true
      aws:asset:property: Code
    Condition: RagEnabled
  RagAuthorizer1D577454:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      IdentitySource: method.request.header.Authorization
      Name: GenerativeAiUseCasesStackRagAuthorizer01650AA3
      ProviderARNs:
        - Fn::GetAtt:
            - AuthUserPool8115E87F
            - Arn
      RestApiId:
        Ref: APIApiFFA96F67
      Type: COGNITO_USER_POOLS
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Condition: RagEnabled
  TranscribeAudioBucket39DFF290:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - PUT
            AllowedOrigins:
              - '*'
            ExposedHeaders: []
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeAudioBucketPolicyB71E621B:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: TranscribeAudioBucket39DFF290
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - TranscribeAudioBucket39DFF290
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeAudioBucket39DFF290
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - TranscribeAudioBucket39DFF290
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeAudioBucket39DFF290
                        - Arn
                    - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeAudioBucketAutoDeleteObjectsCustomResourceD2EB7175:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: TranscribeAudioBucket39DFF290
    DependsOn:
      - TranscribeAudioBucketPolicyB71E621B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeTranscriptBucketE67CAF92:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeTranscriptBucketPolicy80F67AB4:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: TranscribeTranscriptBucketE67CAF92
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: '*'
            Resource:
              - Fn::GetAtt:
                  - TranscribeTranscriptBucketE67CAF92
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeTranscriptBucketE67CAF92
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - TranscribeTranscriptBucketE67CAF92
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeTranscriptBucketE67CAF92
                        - Arn
                    - /*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeTranscriptBucketAutoDeleteObjectsCustomResourceE45B855F:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: TranscribeTranscriptBucketE67CAF92
    DependsOn:
      - TranscribeTranscriptBucketPolicy80F67AB4
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeGetSignedUrlServiceRoleA1966EF9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeGetSignedUrlServiceRoleDefaultPolicyD897275F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TranscribeAudioBucket39DFF290
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeAudioBucket39DFF290
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: TranscribeGetSignedUrlServiceRoleDefaultPolicyD897275F
      Roles:
        - Ref: TranscribeGetSignedUrlServiceRoleA1966EF9
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeGetSignedUrlB23CCF77:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/067628f126cb2d7974f65cdc958e1ed1c00896ed15fb6f81032a47401653be03.zip
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: TranscribeAudioBucket39DFF290
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - TranscribeGetSignedUrlServiceRoleA1966EF9
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - TranscribeGetSignedUrlServiceRoleDefaultPolicyD897275F
      - TranscribeGetSignedUrlServiceRoleA1966EF9
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.067628f126cb2d7974f65cdc958e1ed1c00896ed15fb6f81032a47401653be03
      aws:asset:is-bundled: true
      aws:asset:property: Code
  TranscribeStartTranscriptionServiceRoleE21CF5C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeStartTranscriptionServiceRoleDefaultPolicyE7AED37C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: transcribe:*
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TranscribeAudioBucket39DFF290
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeAudioBucket39DFF290
                        - Arn
                    - /*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TranscribeTranscriptBucketE67CAF92
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeTranscriptBucketE67CAF92
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: TranscribeStartTranscriptionServiceRoleDefaultPolicyE7AED37C
      Roles:
        - Ref: TranscribeStartTranscriptionServiceRoleE21CF5C0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeStartTranscription7C6A7A96:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/592b2f1e865118da949f23da1b60eacb64a21c0611bc05dbf218da8a63b3982b.zip
      Environment:
        Variables:
          TRANSCRIPT_BUCKET_NAME:
            Ref: TranscribeTranscriptBucketE67CAF92
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - TranscribeStartTranscriptionServiceRoleE21CF5C0
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - TranscribeStartTranscriptionServiceRoleDefaultPolicyE7AED37C
      - TranscribeStartTranscriptionServiceRoleE21CF5C0
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.592b2f1e865118da949f23da1b60eacb64a21c0611bc05dbf218da8a63b3982b
      aws:asset:is-bundled: true
      aws:asset:property: Code
  TranscribeGetTranscriptionServiceRoleF0840D49:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - 'arn:'
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeGetTranscriptionServiceRoleDefaultPolicy319B7E4B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: transcribe:*
            Effect: Allow
            Resource: '*'
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - TranscribeTranscriptBucketE67CAF92
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - TranscribeTranscriptBucketE67CAF92
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: TranscribeGetTranscriptionServiceRoleDefaultPolicy319B7E4B
      Roles:
        - Ref: TranscribeGetTranscriptionServiceRoleF0840D49
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeGetTranscription3C736BFC:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/74bbf5dea42eb18a4197db70f9da94526b6da09c0c1d17e16b9ef3d291a8100c.zip
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - TranscribeGetTranscriptionServiceRoleF0840D49
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - TranscribeGetTranscriptionServiceRoleDefaultPolicy319B7E4B
      - TranscribeGetTranscriptionServiceRoleF0840D49
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:asset:path: asset.74bbf5dea42eb18a4197db70f9da94526b6da09c0c1d17e16b9ef3d291a8100c
      aws:asset:is-bundled: true
      aws:asset:property: Code
  TranscribeAuthorizerAD1EA74B:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      IdentitySource: method.request.header.Authorization
      Name: GenerativeAiUseCasesStackTranscribeAuthorizerAF169A6F
      ProviderARNs:
        - Fn::GetAtt:
            - AuthUserPool8115E87F
            - Arn
      RestApiId:
        Ref: APIApiFFA96F67
      Type: COGNITO_USER_POOLS
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  TranscribeGrantAccessTranscribeStream9E9439CC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: transcribe:StartStreamTranscriptionWebSocket
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: TranscribeGrantAccessTranscribeStream9E9439CC
      Roles:
        - Ref: AuthIdentityPoolAuthenticatedRole09311B20
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ExportsReader8B249524:
    Type: Custom::CrossRegionExportReader
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68
          - Arn
      ReaderProps:
        region: ap-northeast-1
        prefix: GenerativeAiUseCasesStack
        imports:
          ? /cdk/exports/GenerativeAiUseCasesStack/CloudFrontWafStackuseast1FnGetAttWebAclCloudFrontWafStackWebAclWebAclCloudFrontWafStackAC643995Arn68A112D4
          : '{{resolve:ssm:/cdk/exports/GenerativeAiUseCasesStack/CloudFrontWafStackuseast1FnGetAttWebAclCloudFrontWafStackWebAclWebAclCloudFrontWafStackAC643995Arn68A112D4}}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - 'arn:aws:ssm:ap-northeast-1:'
                      - Ref: AWS::AccountId
                      - :parameter/cdk/exports/GenerativeAiUseCasesStack/*
                Action:
                  - ssm:AddTagsToResource
                  - ssm:RemoveTagsFromResource
                  - ssm:GetParameters
  CustomCrossRegionExportReaderCustomResourceProviderHandler46647B68:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          ws-assets-prod-iad-r-nrt-2cb4b4649d0e0f94
        S3Key: 9748a536-3a71-4f0e-a6cd-ece16c0e3487/2024-09-26/ap-northeast-1/8acca95a9957d02a9f3ec124c9869c5d5b70a7fb3e332120850781ecc9363037.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD
          - Arn
      Runtime: nodejs20.x
    DependsOn:
      - CustomCrossRegionExportReaderCustomResourceProviderRole10531BBD
    Metadata:
      aws:asset:path: asset.8acca95a9957d02a9f3ec124c9869c5d5b70a7fb3e332120850781ecc9363037
      aws:asset:property: Code
  BuildArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  BuildArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: BuildArtifactBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::Sub: arn:aws:s3:::${BuildArtifactBucket}
              - Fn::Sub: arn:aws:s3:::${BuildArtifactBucket}/*
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  BuildArtifactBucketAutoDeleteObjectsCustomResource:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: BuildArtifactBucket
    DependsOn:
      - BuildArtifactBucketPolicy
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  APIApiDeployment3A502123671b5ca1ab7fd355c4257b9261a52e6e:
    Condition: RagDisabled
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: APIApiFFA96F67
    DependsOn:
      - APIApiApi4XXDCF913C8
      - APIApiApi5XX11B67643
      - APIApichatschatIdDELETE4578D41B
      - APIApichatschatIdfeedbacksOPTIONS7AB34AA5
      - APIApichatschatIdfeedbacksPOST3E9ACBEC
      - APIApichatschatIdfeedbacksF371F57A
      - APIApichatschatIdGET152C9123
      - APIApichatschatIdmessagesGET94AB097F
      - APIApichatschatIdmessagesOPTIONS20207E07
      - APIApichatschatIdmessagesPOST4197DA8F
      - APIApichatschatIdmessagesAF527CE8
      - APIApichatschatIdOPTIONS4498230E
      - APIApichatschatIdE67019A6
      - APIApichatschatIdtitleOPTIONSFA0EB6B7
      - APIApichatschatIdtitlePUT15099F54
      - APIApichatschatIdtitleC5AEA917
      - APIApichatsGET40767623
      - APIApichatsOPTIONSDFF708CB
      - APIApichatsPOSTF32299AA
      - APIApichatsE061702A
      - APIApifilefileNameDELETE54EB1050
      - APIApifilefileNameOPTIONS6C97AC5A
      - APIApifilefileName2B0471F4
      - APIApifileOPTIONS64A72556
      - APIApifile76AB343B
      - APIApifileurlGET6E9EDFE6
      - APIApifileurlOPTIONS658BFB93
      - APIApifileurlPOST73D5BB3A
      - APIApifileurl08DA507F
      - APIApiimagegenerateOPTIONS58BC3827
      - APIApiimagegeneratePOST0F60597D
      - APIApiimagegenerate70662BCD
      - APIApiimageOPTIONSA57099DB
      - APIApiimage6FBCA1DF
      - APIApiOPTIONSE134DC36
      - APIApipredictOPTIONS9065A8D6
      - APIApipredictPOST376D7D2E
      - APIApipredict6CA3C413
      - APIApipredicttitleOPTIONS3DCF08ED
      - APIApipredicttitlePOSTAC11F63E
      - APIApipredicttitle8F6A9913
      - APIApishareschatchatIdGETFD670180
      - APIApishareschatchatIdOPTIONSBA4BB233
      - APIApishareschatchatIdPOSTC94D0E3B
      - APIApishareschatchatIdABA7B83C
      - APIApishareschatOPTIONSB4A81F6A
      - APIApishareschatA32CD614
      - APIApisharesOPTIONSF1049E3B
      - APIApishares3C1C04E5
      - APIApisharesshareshareIdDELETE231A4EBF
      - APIApisharesshareshareIdGETADBE379F
      - APIApisharesshareshareIdOPTIONSC762F46F
      - APIApisharesshareshareId3696CDAF
      - APIApisharesshareOPTIONS6D42A67D
      - APIApisharesshareF2EC0273
      - APIApisystemcontextssystemContextIdDELETEB527E743
      - APIApisystemcontextssystemContextIdOPTIONS96E8D02C
      - APIApisystemcontextssystemContextId9D6F9E56
      - APIApisystemcontextssystemContextIdtitleOPTIONS069062F2
      - APIApisystemcontextssystemContextIdtitlePUT66B31C9A
      - APIApisystemcontextssystemContextIdtitleD469F521
      - APIApisystemcontextsGET7ECB64D3
      - APIApisystemcontextsOPTIONS0D2703AA
      - APIApisystemcontextsPOST3883EC4A
      - APIApisystemcontexts57785227
      - APIApitranscribeOPTIONS5030955A
      - APIApitranscribe874542A9
      - APIApitranscriberesultjobNameGET5C0FF2AB
      - APIApitranscriberesultjobNameOPTIONS7E77FDC0
      - APIApitranscriberesultjobName32470D3A
      - APIApitranscriberesultOPTIONS36EC9D59
      - APIApitranscriberesult3CDED854
      - APIApitranscribestartOPTIONSFA1C7723
      - APIApitranscribestartPOSTC6AF1C94
      - APIApitranscribestartB105DFD0
      - APIApitranscribeurlOPTIONS6B7DF1F0
      - APIApitranscribeurlPOSTFBEEA27D
      - APIApitranscribeurlAA281183
      - APIApiwebtextGETB44776EB
      - APIApiwebtextOPTIONS5EFD2A2D
      - APIApiwebtext0828B9D5
      - APIAuthorizer9DCC037B
      - TranscribeAuthorizerAD1EA74B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
Outputs:
  APIApiEndpoint036547C6:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: APIApiFFA96F67
          - .execute-api.ap-northeast-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: APIApiDeploymentStageapiCD55D117
          - /
  Region:
    Value: ap-northeast-1
  WebUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - ApiWebCloudFrontDistributionA115FBC3
              - DomainName
  ApiEndpoint:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: APIApiFFA96F67
          - .execute-api.ap-northeast-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: APIApiDeploymentStageapiCD55D117
          - /
  UserPoolId:
    Value:
      Ref: AuthUserPool8115E87F
  UserPoolClientId:
    Value:
      Ref: AuthUserPoolclientA74673A9
  IdPoolId:
    Value:
      Ref: AuthIdentityPool659E7F64
  PredictStreamFunctionArn:
    Value:
      Fn::GetAtt:
        - APIPredictStream44DDBC25
        - Arn
  RagEnabled:
    Value: "true"
  RagKnowledgeBaseEnabled:
    Value: "false"
  AgentEnabled:
    Value: "false"
  SelfSignUpEnabled:
    Value: "true"
  ModelRegion:
    Value:
      Ref: ModelRegion
  ModelIds:
    Value:
      Fn::Sub:
        - '["${ModelIds}"]'
        - ModelIds:
            Fn::Join:
              - '","'
              - Ref: ModelIds
  MultiModalModelIds:
    Value: '["anthropic.claude-3-5-sonnet-20240620-v1:0","anthropic.claude-3-opus-20240229-v1:0","anthropic.claude-3-sonnet-20240229-v1:0","anthropic.claude-3-haiku-20240307-v1:0","us.anthropic.claude-3-5-sonnet-20240620-v1:0","us.anthropic.claude-3-opus-20240229-v1:0","us.anthropic.claude-3-sonnet-20240229-v1:0","us.anthropic.claude-3-haiku-20240307-v1:0","eu.anthropic.claude-3-5-sonnet-20240620-v1:0","eu.anthropic.claude-3-sonnet-20240229-v1:0","eu.anthropic.claude-3-haiku-20240307-v1:0","us.meta.llama3-2-11b-instruct-v1:0","us.meta.llama3-2-90b-instruct-v1:0"]'
  ImageGenerateModelIds:
    Value:
      Fn::Sub:
        - '["${ImageGenerationModelIds}"]'
        - ImageGenerationModelIds:
            Fn::Join:
              - '","'
              - Ref: ImageGenerationModelIds
  EndpointNames:
    Value: '[]'
  SamlAuthEnabled:
    Value: "false"
  SamlCognitoDomainName:
    Value: ""
  SamlCognitoFederatedIdentityProviderName:
    Value: ""
  AgentNames:
    Value: '[]'
  RecognizeFileEnabled:
    Value: "false"
Parameters:
  RagEnabled:
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"
    Description: whether to enable RAG
  SelfSignUpEnabled:
    Type: String
    Default: "true"
    AllowedValues:
      - "true"
      - "false"
    Description: whether to enable self-signup
  ModelRegion:
    Type: String
    Default: us-west-2
    AllowedValues:
      - us-west-2
      - us-east-1
    Description: AWS region to use Amazon Bedrock models
  ModelIds:
    Type: CommaDelimitedList
    Default: anthropic.claude-3-sonnet-20240229-v1:0,anthropic.claude-3-haiku-20240307-v1:0
    AllowedValues:
      - anthropic.claude-3-5-sonnet-20240620-v1:0
      - anthropic.claude-3-sonnet-20240229-v1:0
      - anthropic.claude-3-haiku-20240307-v1:0
      - anthropic.claude-v2:1
      - anthropic.claude-v2
      - anthropic.claude-instant-v1
      - amazon.titan-text-premier-v1:0
      - meta.llama3-8b-instruct-v1:0
      - meta.llama3-70b-instruct-v1:0
      - meta.llama2-13b-chat-v1
      - meta.llama2-70b-chat-v1
      - mistral.mistral-7b-instruct-v0:2
      - mistral.mixtral-8x7b-instruct-v0:1
      - mistral.mistral-small-2402-v1:0
      - mistral.mistral-large-2402-v1:0
      - cohere.command-r-v1:0
      - cohere.command-r-plus-v1:0
    Description: Model Ids for text generation (comma-separated list)
  ImageGenerationModelIds:
    Type: CommaDelimitedList
    Default: stability.stable-diffusion-xl-v1
    AllowedValues:
      - stability.stable-diffusion-xl-v1
      - amazon.titan-image-generator-v1
    Description: Model Ids for image generation (comma-separated list)
  AllowedIpV4AddressRanges:
    Type: String
    Default: 0.0.0.0/1,128.0.0.0/1
    Description: allowed IPv4 ranges (comma-separated list)
  AllowedIpV6AddressRanges:
    Type: String
    Default: ::/1,8000::/1
    Description: allowed IPv6 ranges (comma-separated list)
Conditions:
  RagEnabled:
    Fn::Equals:
      - "true"
      - Ref: RagEnabled
  RagDisabled:
    Fn::Equals:
      - "false"
      - Ref: RagEnabled
  SelfSignUpEnabled:
    Fn::Equals:
      - "true"
      - Ref: SelfSignUpEnabled
  AllowedIpV4AddressRanges:
    Fn::Not:
      - Fn::Equals:
          - ""
          - Ref: AllowedIpV4AddressRanges
  AllowedIpV6AddressRanges:
    Fn::Not:
      - Fn::Equals:
          - ""
          - Ref: AllowedIpV6AddressRanges
  AllowedIpAddressBothDefined:
    Fn::And:
      - Fn::Not:
          - Fn::Equals:
              - ""
              - Ref: AllowedIpV4AddressRanges
      - Fn::Not:
          - Fn::Equals:
              - ""
              - Ref: AllowedIpV6AddressRanges
  AllowedIpAddressEmpty:
    Fn::And:
      - Fn::Equals:
          - ""
          - Ref: AllowedIpV4AddressRanges
      - Fn::Equals:
          - ""
          - Ref: AllowedIpV6AddressRanges
